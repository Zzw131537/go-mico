// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: taskModel.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskModel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Uid           uint64                 `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	StartTime     int64                  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       int64                  `protobuf:"varint,6,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Status        int64                  `protobuf:"varint,7,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime    int64                  `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,9,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskModel) Reset() {
	*x = TaskModel{}
	mi := &file_taskModel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskModel) ProtoMessage() {}

func (x *TaskModel) ProtoReflect() protoreflect.Message {
	mi := &file_taskModel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskModel.ProtoReflect.Descriptor instead.
func (*TaskModel) Descriptor() ([]byte, []int) {
	return file_taskModel_proto_rawDescGZIP(), []int{0}
}

func (x *TaskModel) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskModel) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *TaskModel) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskModel) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TaskModel) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TaskModel) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TaskModel) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskModel) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *TaskModel) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_taskModel_proto protoreflect.FileDescriptor

const file_taskModel_proto_rawDesc = "" +
	"\n" +
	"\x0ftaskModel.proto\x12\aservice\"\xed\x01\n" +
	"\tTaskModel\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x04R\x02Id\x12\x10\n" +
	"\x03Uid\x18\x02 \x01(\x04R\x03Uid\x12\x14\n" +
	"\x05Title\x18\x03 \x01(\tR\x05Title\x12\x18\n" +
	"\aContent\x18\x04 \x01(\tR\aContent\x12\x1c\n" +
	"\tstartTime\x18\x05 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aEndTime\x18\x06 \x01(\x03R\aEndTime\x12\x16\n" +
	"\x06Status\x18\a \x01(\x03R\x06Status\x12\x1e\n" +
	"\n" +
	"CreateTime\x18\b \x01(\x03R\n" +
	"CreateTime\x12\x1e\n" +
	"\n" +
	"UpdateTime\x18\t \x01(\x03R\n" +
	"UpdateTimeB\vZ\t./;protosb\x06proto3"

var (
	file_taskModel_proto_rawDescOnce sync.Once
	file_taskModel_proto_rawDescData []byte
)

func file_taskModel_proto_rawDescGZIP() []byte {
	file_taskModel_proto_rawDescOnce.Do(func() {
		file_taskModel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_taskModel_proto_rawDesc), len(file_taskModel_proto_rawDesc)))
	})
	return file_taskModel_proto_rawDescData
}

var file_taskModel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_taskModel_proto_goTypes = []any{
	(*TaskModel)(nil), // 0: service.TaskModel
}
var file_taskModel_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_taskModel_proto_init() }
func file_taskModel_proto_init() {
	if File_taskModel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_taskModel_proto_rawDesc), len(file_taskModel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_taskModel_proto_goTypes,
		DependencyIndexes: file_taskModel_proto_depIdxs,
		MessageInfos:      file_taskModel_proto_msgTypes,
	}.Build()
	File_taskModel_proto = out.File
	file_taskModel_proto_goTypes = nil
	file_taskModel_proto_depIdxs = nil
}
